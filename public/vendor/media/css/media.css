@charset "UTF-8";

/*Features*/

/*
|
| When you have a container with fixed width
| and you want the background of this container
| is full
|
*/

.pace {
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.pace .pace-progress {
  background: #f24d23;
  position: fixed;
  z-index: 2000;
  top: 0;
  right: 100%;
  width: 100%;
  height: 2px;
}

.pace .pace-progress-inner {
  display: block;
  position: absolute;
  right: 0;
  width: 100px;
  height: 100%;
  -webkit-box-shadow: 0 0 10px #f24d23, 0 0 5px #f24d23;
          box-shadow: 0 0 10px #f24d23, 0 0 5px #f24d23;
  opacity: 1.0;
  -webkit-transform: rotate(3deg) translate(0px, -4px);
          transform: rotate(3deg) translate(0px, -4px);
}

.pace .pace-activity {
  display: block;
  position: fixed;
  z-index: 2000;
  top: 20px;
  right: 15px;
  width: 14px;
  height: 14px;
  border: solid 2px transparent;
  border-top-color: #ffffff;
  border-left-color: #ffffff;
  border-radius: 10px;
  -webkit-animation: pace-spinner 400ms linear infinite;
          animation: pace-spinner 400ms linear infinite;
}

.pace-inactive {
  display: none;
}

@-webkit-keyframes pace-spinner {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes pace-spinner {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

body,
html {
  height: 100%;
}

.rv-media-wrapper * {
  border-radius: 0 !important;
}

.rv-media-wrapper a {
  color: #f24d23;
  text-decoration: none;
}

.rv-media-breadcrumb {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.rv-media-breadcrumb ul {
  margin: 0;
  padding: 0;
}

.rv-media-breadcrumb .breadcrumb {
  background-color: transparent;
}

.rv-media-breadcrumb .breadcrumb li:last-child:not(:first-child) a {
  color: #333;
}

.rv-media-block {
  padding: 15px;
}

.rv-media-block .rv-media-block-title {
  text-transform: uppercase;
  font-weight: 700;
  font-size: 13px;
}

.rv-media-container .progress {
  -webkit-box-shadow: none;
          box-shadow: none;
  height: 10px;
  margin: 0;
}

.rv-media-container .progress-bar-warning {
  background-color: #f7ca18;
}

.rv-media-container .progress-bardanger {
  background-color: #f24d23;
}

.rv-media-container .progress-bar-success {
  background-color: #003d4f;
}

.rv-media-container .progress-bar-info {
  background-color: #dbdbdb;
}

.rv-media-container .input-group .btn,
.rv-media-container .input-group .form-control {
  height: 34px;
}

.rv-media-container .custom-checkbox {
  position: relative;
}

.rv-media-container .custom-checkbox label {
  margin: 0;
  display: block;
  cursor: pointer;
}

.rv-media-container .custom-checkbox input {
  width: 0;
  height: 0;
  visibility: hidden;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
}

.rv-media-container .custom-checkbox span {
  width: 20px;
  height: 20px;
  border: 2px solid rgba(0, 0, 0, 0.5);
  display: block;
  position: relative;
  border-radius: 2px;
}

.rv-media-container .custom-checkbox span:before {
  content: "\F00C";
  font-family: "FontAwesome";
  font-size: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  color: #f24d23;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.rv-media-container .custom-checkbox input:checked + span {
  border: 2px solid #f24d23;
}

.rv-media-container .custom-checkbox input:checked + span:before {
  font-size: 13px;
}

.rv-media-thumbnail {
  position: relative;
  width: 100%;
  overflow: hidden;
}

.rv-media-thumbnail:before {
  content: '';
  display: block;
  padding-bottom: 100%;
  height: 0;
}

.rv-media-thumbnail i {
  font-size: 30px;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
}

.rv-media-thumbnail img {
  max-height: 100%;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
}

.rv-media-container .btn {
  border-radius: 0;
  font-size: 13px;
}

.rv-media-container .btn:not(.btn-link) {
  -webkit-box-shadow: inset 0 -2px 0 rgba(0, 0, 0, 0.15);
          box-shadow: inset 0 -2px 0 rgba(0, 0, 0, 0.15);
}

.rv-media-container .btn-success {
  background-color: #003d4f;
  border-color: #003d4f;
}

.rv-media-container .btn-success:hover,
.rv-media-container .btn-success:active,
.rv-media-container .btn-success:focus {
  background-color: #f24d23;
  border-color: #f24d23;
}

.rv-media-container .btn-primary {
  background-color: #1991d1;
  border-color: #1991d1;
}

.rv-media-container .btn-danger {
  background-color: #f24d23;
  border-color: #f24d23;
}

.rv-media-container .btn-info {
  background-color: #dbdbdb;
  border-color: #dbdbdb;
}

.rv-media-container .btn-warning {
  background-color: #f7ca18;
  border-color: #f7ca18;
}

.rv-media-container .btn.disabled {
  color: #333;
  background-color: #fff;
  border-color: #ccc;
  pointer-events: none;
  opacity: 0.4;
}

#rv_media_modal {
  z-index: 99991 !important;
}

.rv-media-container .rv-modals * {
  border-radius: 0 !important;
}

.rv-media-container .rv-modals .modal-open {
  overflow: hidden;
}

.rv-media-container .rv-modals .modal {
  display: none;
  overflow: auto;
  overflow-y: scroll;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  -webkit-overflow-scrolling: touch;
  outline: 0;
  padding-right: 0 !important;
}

.rv-media-container .rv-modals .modal.fade .modal-dialog {
  -webkit-transform: translate(0, -25%);
  transform: translate(0, -25%);
  -webkit-transition: -webkit-transform 0.3s ease-out;
  transition: -webkit-transform 0.3s ease-out;
  transition: transform 0.3s ease-out;
  transition: transform 0.3s ease-out, -webkit-transform 0.3s ease-out;
}

.rv-media-container .rv-modals .modal.in .modal-dialog {
  -webkit-transform: translate(0, 0);
  transform: translate(0, 0);
}

.rv-media-container .rv-modals .modal-content {
  position: relative;
  background-color: #ffffff;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 6px;
  -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
  background-clip: padding-box;
  outline: none;
}

.rv-media-container .rv-modals .modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1040;
  background-color: #000000;
}

.rv-media-container .rv-modals .modal-backdrop.fade {
  opacity: 0;
  filter: alpha(opacity=0);
}

.rv-media-container .rv-modals .modal-backdrop.in {
  opacity: 0.5;
  filter: alpha(opacity=50);
}

.rv-media-container .rv-modals .modal-header {
  padding: 0;
  background: #003d4f;
  border: none;
}

.rv-media-container .rv-modals .modal-header .close {
  margin: 8px 15px 0 0 !important;
  color: #ffffff;
  opacity: 1;
  background-image: none !important;
  visibility: visible;
  text-indent: 0;
  opacity: 0.5;
}

.rv-media-container .rv-modals .modal-header .close:hover {
  opacity: 0.8;
}

.rv-media-container .rv-modals .modal-header .close span {
  font-size: 22px;
}

.rv-media-container .rv-modals .modal-header h4 {
  font-size: 15px;
  color: #ffffff;
  padding: 10px 15px;
}

.rv-media-container .rv-modals .modal.fade .modal-dialog {
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-transition: all 0.3s, width 0s;
  transition: all 0.3s, width 0s;
  -webkit-transform: scale(0.7);
  transform: scale(0.7);
}

.rv-media-container .rv-modals .modal.fade.in .modal-dialog {
  opacity: 1;
  filter: alpha(opacity=100);
  -webkit-transform: scale(1);
  transform: scale(1);
}

.rv-media-container .rv-modals .modal-body {
  padding-bottom: 10px;
}

.rv-media-container #modal_add_from_youtube .custom-checkbox {
  white-space: nowrap;
  padding-right: 25px;
}

.rv-media-container #modal_add_from_youtube .custom-checkbox small {
  line-height: 20px;
  margin-left: 5px;
}

.rv-media-container #modal_add_from_youtube .input-group .btn {
  -webkit-box-shadow: none;
          box-shadow: none;
}

.media-modal > .modal-dialog {
  position: absolute !important;
  top: 50px !important;
  bottom: 50px !important;
  right: 50px !important;
  left: 50px !important;
  -webkit-transform: none !important;
          transform: none !important;
  margin: 0 !important;
  width: auto !important;
}

.media-modal > .modal-dialog .modal-content {
  height: 100% !important;
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: normal !important;
      -ms-flex-direction: column !important;
          flex-direction: column !important;
}

.media-modal > .modal-dialog .modal-content .modal-body {
  height: auto !important;
  -webkit-box-flex: 1 !important;
      -ms-flex-positive: 1 !important;
          flex-grow: 1 !important;
}

.rv-upload-progress {
  position: fixed;
  bottom: 0;
  right: 0;
  width: 600px;
  z-index: 9999;
  -webkit-transition: all 0.3s linear;
  transition: all 0.3s linear;
}

.rv-upload-progress.hide-the-pane {
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  opacity: 0;
  filter: alpha(opacity=0);
}

.rv-upload-progress .close-pane {
  position: absolute;
  top: 50%;
  right: 12px;
  margin-top: -12px;
  width: 24px;
  height: 24px;
  color: #ffffff;
  background-color: #f24d23;
  line-height: 24px;
  text-align: center;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.rv-upload-progress .close-pane:hover {
  opacity: 0.8;
  filter: alpha(opacity=80);
}

.rv-upload-progress .panel {
  margin: 0;
  border: 0 none;
}

.rv-upload-progress .panel-heading {
  position: relative;
  padding: 15px;
  background-color: #003d4f;
  color: #ffffff;
}

.rv-upload-progress .panel-heading:before,
.rv-upload-progress .panel-heading:after {
  content: '';
  display: table;
  clear: both;
}

.rv-upload-progress .panel-body {
  padding: 0;
  overflow: auto;
  max-height: 180px;
}

.rv-upload-progress .rv-upload-progress-table {
  list-style: none;
  padding: 0;
  margin: 0;
}

.rv-upload-progress .rv-upload-progress-table li {
  border-bottom: 1px solid #dbdbdb;
  border-left: 1px solid #dbdbdb;
}

.rv-upload-progress .rv-upload-progress-table li:before,
.rv-upload-progress .rv-upload-progress-table li:after {
  content: '';
  display: table;
  clear: both;
}

.rv-upload-progress .rv-upload-progress-table li:nth-child(odd) {
  background-color: rgba(219, 219, 219, 0.5);
}

.rv-upload-progress .rv-upload-progress-table .rv-table-col {
  float: left;
  width: 20%;
  padding: 15px;
}

.rv-upload-progress .rv-upload-progress-table .rv-table-col:first-child {
  width: 60%;
}

.rv-upload-progress .file-name,
.rv-upload-progress .file-size {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: block;
}

.rv-media-wrapper .btn.collapse-panel {
  color: #f24d23;
  font-size: 20px;
}

.rv-media-wrapper .btn.collapse-panel,
.rv-media-wrapper .btn.collapse-panel i {
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.rv-media-wrapper .disabled {
  pointer-events: none;
  opacity: 0.4;
  filter: alpha(opacity=40);
}

.loading-wrapper {
  display: none;
}

.bb-loading {
  position: relative;
  background-color: rgba(0, 0, 0, 0.05);
}

.bb-loading .loading-wrapper {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  display: block;
}

.bb-loading .loading-wrapper .loader {
  position: relative;
  margin: 0 auto;
  width: 50px;
}

.bb-loading .loading-wrapper .loader:before {
  content: '';
  display: block;
  padding-top: 100%;
}

.bb-loading .loading-wrapper .circular {
  -webkit-animation: rotate 2s linear infinite;
          animation: rotate 2s linear infinite;
  height: 100%;
  -webkit-transform-origin: center center;
          transform-origin: center center;
  width: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
}

.bb-loading .loading-wrapper .path {
  stroke-dasharray: 1, 200;
  stroke-dashoffset: 0;
  -webkit-animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
          animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
  stroke-linecap: round;
}

@keyframes rotate {
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@-webkit-keyframes rotate {
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@keyframes dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -35px;
  }

  100% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -124px;
  }
}

@-webkit-keyframes dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -35px;
  }

  100% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -124px;
  }
}

@keyframes color {
  100%, 0% {
    stroke: #d62d20;
  }

  40% {
    stroke: #0057e7;
  }

  66% {
    stroke: #008744;
  }

  80%, 90% {
    stroke: #ffa700;
  }
}

@-webkit-keyframes color {
  100%, 0% {
    stroke: #d62d20;
  }

  40% {
    stroke: #0057e7;
  }

  66% {
    stroke: #008744;
  }

  80%, 90% {
    stroke: #ffa700;
  }
}

.loading-icon {
  position: absolute;
  top: 0;
  left: 0;
  content: '';
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  width: 100%;
  height: 100%;
  margin: 0;
  z-index: 99;
  /* -webkit-animation: fa-spin 2s infinite linear; */
  /* animation: fa-spin 2s infinite linear; */
}

.loading-icon i {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  display: block;
  width: 50px;
  z-index: 22222;
  font-size: 40px;
  color: #fff;
}

.rv-media-container .on-loading {
  position: relative;
  background-color: rgba(0, 0, 0, 0.05);
}

.rv-media-container .loading-wrapper {
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  display: block;
  background: rgba(255, 255, 255, 0.4);
  width: 100%;
  height: 100%;
}

.on-loading > .rv-media-container .loading-wrapper {
  display: block;
}

.rv-media-container .loading-wrapper .showbox {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  top: 40%;
}

.rv-media-container .loading-wrapper .loader {
  position: relative;
  margin: 0 auto;
  width: 50px;
}

.rv-media-container .loading-wrapper .loader:before {
  content: '';
  display: block;
  padding-top: 100%;
}

.rv-media-container .loading-wrapper .circular {
  -webkit-animation: rotate 2s linear infinite;
          animation: rotate 2s linear infinite;
  height: 100%;
  -webkit-transform-origin: center center;
          transform-origin: center center;
  width: 100%;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
}

.rv-media-container .loading-wrapper .path {
  stroke-dasharray: 1, 200;
  stroke-dashoffset: 0;
  -webkit-animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
          animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
  stroke-linecap: round;
}

@keyframes rotate {
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@-webkit-keyframes rotate {
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}

@keyframes dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -35px;
  }

  100% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -124px;
  }
}

@-webkit-keyframes dash {
  0% {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -35px;
  }

  100% {
    stroke-dasharray: 89, 200;
    stroke-dashoffset: -124px;
  }
}

@keyframes color {
  100%, 0% {
    stroke: #d62d20;
  }

  40% {
    stroke: #0057e7;
  }

  66% {
    stroke: #008744;
  }

  80%, 90% {
    stroke: #ffa700;
  }
}

@-webkit-keyframes color {
  100%, 0% {
    stroke: #d62d20;
  }

  40% {
    stroke: #0057e7;
  }

  66% {
    stroke: #008744;
  }

  80%, 90% {
    stroke: #ffa700;
  }
}

.media-modal-loading {
  opacity: 0;
  filter: alpha(opacity=0);
}

.media-modal-loading * {
  display: none !important;
}

.rv-media-header .rv-media-top-header,
.rv-media-header .rv-media-bottom-header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  padding: 10px;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  border-bottom: 1px solid #dbdbdb;
}

.rv-media-header .rv-media-top-header {
  background-color: #f5f5f5;
}

.rv-media-header .rv-media-top-header .rv-media-actions,
.rv-media-header .rv-media-top-header .rv-media-search {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.rv-media-header .rv-media-top-header .rv-media-actions {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.rv-media-header .rv-media-top-header .rv-media-actions .btn {
  margin-right: 5px;
}

.rv-media-header .rv-media-top-header .rv-media-search .input-search-wrapper {
  position: relative;
}

.rv-media-header .rv-media-top-header .rv-media-search input {
  -webkit-box-shadow: none !important;
          box-shadow: none !important;
  border: 1px solid #003d4f;
  color: #003d4f;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  width: 200px;
}

.rv-media-header .rv-media-top-header .rv-media-search input:focus {
  border: 1px solid #f24d23;
}

.rv-media-header .rv-media-top-header .rv-media-search .btn {
  position: absolute;
  top: 0;
  right: 0;
  color: #003d4f;
}

.rv-media-header .rv-media-top-header .rv-media-search .btn:hover,
.rv-media-header .rv-media-top-header .rv-media-search .btn:focus,
.rv-media-header .rv-media-top-header .rv-media-search .btn:active {
  color: #f24d23;
}

.rv-media-header .rv-media-bottom-header .rv-media-breadcrumb,
.rv-media-header .rv-media-bottom-header .rv-media-tools {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.rv-media-header .rv-media-bottom-header .rv-media-tools .dropdown {
  display: inline-block;
}

.rv-media-header .rv-media-bottom-header .rv-media-tools .btn-group {
  margin-left: 5px;
}

.rv-media-footer {
  padding: 10px;
  text-align: right;
  border-top: 1px solid #dbdbdb;
}

.rv-media-aside {
  position: relative;
  width: 200px;
  min-width: 200px;
  background-color: #003d4f;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.rv-media-aside .rv-media-block-title {
  color: #ffffff;
}

.rv-media-aside .collapse-sidebar {
  margin: 0;
  height: 43px;
  width: 100%;
  text-align: center;
  cursor: pointer;
  background: rgba(0, 0, 0, 0.2);
  color: #ffffff;
  border-left: 2px solid rgba(0, 0, 0, 0.2);
}

.rv-media-aside .collapse-sidebar:hover {
  border-left: 2px solid #f24d23;
}

.rv-media-aside .collapse-sidebar .icon {
  line-height: 40px;
}

.rv-media-aside .collapse-sidebar .icon:before {
  display: inline-block;
  font-size: 16px;
  -webkit-transform: rotate(-180deg);
          transform: rotate(-180deg);
}

.rv-media-aside-list {
  list-style: none;
  margin: 0 -15px;
  padding: 15px 0 0 0;
  font-size: 14px;
}

.rv-media-aside-list li {
  margin-bottom: 1px;
}

.rv-media-aside-list li.active a,
.rv-media-aside-list li a:hover,
.rv-media-aside-list li a:active,
.rv-media-aside-list li a:focus {
  background-color: rgba(0, 0, 0, 0.2);
  border-left: 2px solid #f24d23;
}

.rv-media-aside-list a {
  text-decoration: none;
  color: #ffffff;
  font-size: 13px;
  display: block;
  padding: 5px 15px;
  border-left: 2px solid transparent;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.rv-media-aside-list i {
  font-size: 18px;
  margin-right: 10px;
}

.rv-media-aside-bottom {
  padding: 15px;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
}

.rv-media-aside-bottom .used-analytics {
  color: #ffffff;
  margin-top: 8px;
  font-size: 12px;
}

@media (min-width: 992px) {
  .collapse-sidebar {
    display: none;
  }
}

@media (max-width: 991px) {
  .rv-media-aside {
    position: fixed;
    top: 0;
    left: -200px;
    height: 100%;
    z-index: 10;
  }

  #media_aside_collapse:checked ~ .rv-media-aside {
    left: 0;
  }
}

@media (min-width: 992px) {
  .rv-media-aside.rv-media-aside-hide-desktop {
    display: none;
  }
}

#rv_media_body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.rv-media-container {
  width: 100%;
  min-height: 100%;
  height: 100%;
  font-size: 13px;
  overflow: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.rv-media-container * {
  font-size: 13px;
}

.rv-media-container .rv-media-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  min-width: 750px;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.rv-media-container .rv-media-wrapper .rv-media-aside,
.rv-media-container .rv-media-wrapper .rv-media-main-wrapper {
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
}

.rv-media-container .rv-media-wrapper .rv-media-main-wrapper {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.rv-media-container .rv-media-wrapper .rv-media-main-wrapper .rv-media-main {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 200px;
}

.rv-media-container .rv-media-items,
.rv-media-container .rv-media-details {
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  overflow: auto;
  position: relative;
}

.rv-media-container .rv-media-items {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.rv-media-container .rv-media-items .rv-media-item {
  overflow: hidden;
  background-color: rgba(219, 219, 219, 0.3);
}

.rv-media-container .rv-media-details {
  width: 250px;
  min-width: 250px;
  border-left: 1px solid #dbdbdb;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  overflow: hidden;
  overflow-y: auto;
}

.rv-media-container .rv-media-details .rv-media-thumbnail,
.rv-media-container .rv-media-details .rv-media-description {
  width: 250px;
  min-width: 250px;
}

.rv-media-container .rv-media-details .rv-media-thumbnail {
  border-bottom: 1px solid #dbdbdb;
  overflow: visible;
}

.rv-media-container .rv-media-details .rv-media-thumbnail i {
  font-size: 70px;
}

.rv-media-container .rv-media-details .rv-media-thumbnail i.fa.fa-picture-o {
  opacity: 0.5;
}

.rv-media-container .rv-media-details .rv-media-thumbnail img {
  max-width: 90%;
}

.rv-media-container .rv-media-details .rv-media-description {
  padding: 10px;
  position: relative;
}

.rv-media-container .rv-media-details .rv-media-description .rv-media-name > p {
  font-weight: 700;
  margin: 0;
}

.rv-media-container .rv-media-details .rv-media-description .rv-media-name + .rv-media-name {
  margin-top: 5px;
}

.rv-media-container .rv-media-details .rv-media-description .rv-media-name > span {
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.rv-media-container #media_details_collapse:checked ~ .rv-media-main-wrapper .rv-media-details {
  width: 0;
  min-width: 0;
  border: 0 none;
}

.rv-media-container #media_details_collapse:checked ~ .rv-media-main-wrapper .rv-media-tools .collapse-panel i {
  -webkit-transform: rotate(-180deg);
          transform: rotate(-180deg);
}

@media (max-width: 1365px) {
  .rv-media-container .rv-media-details {
    width: 220px;
    min-width: 220px;
  }

  .rv-media-container .rv-media-details .rv-media-thumbnail,
  .rv-media-container .rv-media-details .rv-media-description {
    width: 220px;
    min-width: 220px;
  }
}

@media (max-width: 991px) {
  .rv-media-container .rv-media-wrapper .rv-media-main-wrapper {
    width: 100%;
  }

  .rv-media-container .rv-media-details {
    width: 200px;
    min-width: 200px;
  }

  .rv-media-container .rv-media-details .rv-media-thumbnail,
  .rv-media-container .rv-media-details .rv-media-description {
    width: 200px;
    min-width: 200px;
  }
}

/*Table*/

.rv-media-list {
  border-bottom: 1px solid #dbdbdb;
}

.rv-media-list ul {
  padding: 0;
  margin: 0;
  list-style: none;
}

.rv-media-list .rv-media-list-title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  padding: 15px 10px;
  cursor: pointer;
}

.rv-media-list .rv-media-list-title .custom-checkbox {
  width: 35px;
  min-width: 35px;
}

.rv-media-list .rv-media-list-title .rv-media-file-name {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding-right: 15px;
  padding-top: 3px;
}

.rv-media-list .rv-media-list-title .rv-media-file-name i {
  margin-right: 5px;
}

.rv-media-list .rv-media-list-title .rv-media-file-name i:before {
  display: inline-block;
  font-size: 18px;
}

.rv-media-list .rv-media-list-title .rv-media-file-size {
  width: 120px;
  min-width: 120px;
}

.rv-media-list .rv-media-list-title .rv-media-created-at {
  width: 150px;
  min-width: 150px;
}

.rv-media-list .rv-media-list-title:nth-child(odd) {
  background-color: #ecf0f1;
}

.rv-media-list .rv-media-list-title:hover {
  background-color: #cfd9db;
}

/*Grid*/

.rv-media-grid {
  padding: 10px 10px 0;
}

.rv-media-grid ul {
  padding: 0;
  margin: 0 -5px;
}

.rv-media-grid ul:before,
.rv-media-grid ul:after {
  content: '';
  display: table;
  clear: both;
}

.rv-media-grid li {
  display: block;
  width: 12.5%;
  margin-bottom: 15px;
  float: left;
  padding: 0 5px;
}

.rv-media-grid li .rv-media-item {
  position: relative;
  cursor: pointer;
  -webkit-transition: all 0.1s ease-in-out;
  transition: all 0.1s ease-in-out;
}

.rv-media-grid li .rv-media-item:after {
  content: '';
  display: block;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  position: absolute;
}

.rv-media-grid li .rv-media-thumbnail {
  border-bottom: 0 none;
}

.rv-media-grid li .rv-media-thumbnail img {
  width: auto;
  height: 100%;
  left: 50%;
  top: 0;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}

.rv-media-grid li .rv-media-description {
  padding: 8px 10px;
  -webkit-transition: all 0.1s ease-in-out;
  transition: all 0.1s ease-in-out;
  background-color: #dddddd;
  text-align: center;
}

.rv-media-grid li .rv-media-description .title {
  font-size: 12px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.rv-media-grid li .rv-media-description .size {
  font-size: 12px;
  margin-top: 10px;
}

.rv-media-grid li input[type=checkbox]:checked + .rv-media-item:after {
  -webkit-box-shadow: -2px -2px 0px #f24d23 inset, 2px 2px 0px #f24d23 inset;
          box-shadow: -2px -2px 0px #f24d23 inset, 2px 2px 0px #f24d23 inset;
}

.rv-media-grid li input[type=checkbox]:checked + .rv-media-item .rv-media-description {
  background-color: #f24d23;
  color: #ffffff;
}

.rv-media-grid-small-thumbnail li {
  width: 33.33333333%;
}

.rv-media-grid-small-thumbnail li .rv-media-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.rv-media-grid-small-thumbnail li .rv-media-thumbnail {
  width: 100px;
  min-width: 100px;
  border: 0 none;
  left: 0;
  top: 0;
}

.rv-media-grid-small-thumbnail li .rv-media-description {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.rv-media-grid:not(.rv-media-grid-small-thumbnail) .rv-media-thumbnail i {
  font-size: 70px;
}

.rv-media-items li.no-items {
  width: auto;
  height: auto;
  border-radius: 0;
  border: 0 none;
  position: absolute;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  color: #94a7b1;
  font-weight: 400;
  margin: 0 !important;
  text-align: center;
}

.rv-media-items li.no-items .fa {
  font-size: 150px;
  line-height: 1;
}

.rv-media-items li.no-items h3 {
  font-size: 17px;
}

.on-loading .rv-media-items li.no-items {
  display: none !important;
}

.rv-media-items.has-items .no-items {
  display: none !important;
}

.rv-media-container[data-breadcrumb-count="0"] .rv-media-items li.up-one-level,
.rv-media-container[data-breadcrumb-count="1"] .rv-media-items li.up-one-level {
  display: none !important;
}

.rv-media-container:not([data-view-in="all_media"]) .rv-media-items li.no-items {
  pointer-events: none;
}

.rv-media-container[data-view-in="all_media"] .rv-media-items li.no-items {
  width: 400px;
  height: 400px;
  border-radius: 50% !important;
  border: 1px solid #dce6f1;
  background-color: #ffffff;
  cursor: pointer;
}

@media (max-width: 1365px) {
  .rv-media-grid li {
    width: 16.66666667%;
  }
}

@media (max-width: 991px) {
  .rv-media-grid li {
    width: 20%;
  }
}

.context-menu-list {
  z-index: 3;
}

.media-modal-body {
  padding: 0;
  height: 600px;
  overflow-y: scroll;
  border: none;
}

.rv-media-breadcrumb .breadcrumb li:first-child:before {
  display: none !important;
}

.rv-media-container {
  height: 100vh;
}

.rv-media-container .rv-media-wrapper .rv-media-main-wrapper {
  background: #ffffff;
}

.rv-media-container #modal_add_folder .modal-body {
  padding: 15px;
}

@media (max-width: 991px) {
  .rv-media-container .rv-media-aside {
    z-index: 10000;
  }

  .rv-media-container .rv-media-aside .collapse-sidebar {
    line-height: 41px;
  }
}

#rv_media_modal .modal-dialog {
  background: #ffffff;
}

.rv-media-integrate-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/